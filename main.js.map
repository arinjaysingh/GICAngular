{"version":3,"sources":["./src/environments/environment.ts","./src/app/side-menu/side-menu.component.ts","./src/app/side-menu/side-menu.component.html","./src/app/employement-list/employement-list.component.ts","./src/app/employement-list/employement-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/university-list/university-list.component.ts","./src/app/university-list/university-list.component.html","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-side-menu',\n  templateUrl: './side-menu.component.html',\n  styleUrls: ['./side-menu.component.css']\n})\nexport class SideMenuComponent implements OnInit {\n\n  constructor() { }\n  panelOpenState = true;\n  ngOnInit(): void {\n  }\n\n}\n","\n<mat-accordion>\n    \n    <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                         (closed)=\"panelOpenState = false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n          Suspect List\n        </mat-panel-title>\n        <mat-panel-description>\n          \n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a clas=\"anchor-style\" routerLink=\"/employments\">Employment Suspent List</a><br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a clas=\"anchor-style\" routerLink=\"/universities\">University Suspent List</a>\n    </mat-expansion-panel>\n            \n    <mat-expansion-panel (opened)=\"panelOpenState = true\"\n                         (closed)=\"panelOpenState = false\">\n      <mat-expansion-panel-header>\n        <mat-panel-title>\n        SPOC List\n        </mat-panel-title>\n        <mat-panel-description>\n          \n        </mat-panel-description>\n      </mat-expansion-panel-header>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a  clas=\"anchor-style\" routerLink=\"list1-item1\">SPOC List item1</a><br>\n      &nbsp;&nbsp;&nbsp;&nbsp;<a clas=\"anchor-style\" routerLink=\"/list1-item2\">SPOC List item2</a>\n    </mat-expansion-panel>\n   \n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Well known List\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Stellar\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Stellar MRL\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Vender Portal - Input\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Vender Portal - Output\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            CBV/UTV Check\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            I4V Check\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n      <mat-expansion-panel disabled>\n        <mat-expansion-panel-header>\n          <mat-panel-title>   \n            Auto Adjudication\n          </mat-panel-title>\n        </mat-expansion-panel-header>\n      </mat-expansion-panel>\n\n    \n  </mat-accordion>\n  \n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\nexport interface Employer{\n  id: number,\n  orgId: number,\n  companyName: string,\n  companyAkaName: string,\n  cityName: string,\n  stateName: string,\n  countryName: string,\n  status: string,\n  createdDateTime: string\n}\n\n\n\n@Component({\n  selector: 'app-employement-list',\n  templateUrl: './employement-list.component.html',\n  styleUrls: ['./employement-list.component.css']\n})\nexport class EmployementListComponent implements AfterViewInit {\n  displayedColumns: string[] = [ 'companyName','companyAKAName'];\n  dataSource: MatTableDataSource<Employer>;\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  @ViewChild(MatSort)\n  sort!: MatSort;\n  \n  checked =\"checked\";\n  action ='Create';\n  createEmplyment(){\n    alert('Sure Sir i will');\n  }\n  \n  getfilterList(keyToSearch: string){\n    console.log(keyToSearch);\n    this.employmentList = this.employmentListFromAPI.filter(xx => xx.companyName.toLowerCase().includes(keyToSearch.toLowerCase()));\n  }\n  constructor() {\n    // Load employment record\n    const employmentList = this.employmentListFromAPI;\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(employmentList);\n   \n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    console.log('Filteeeeeeeerrrrr');\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //isActiveSelected =false;\n  editRecord(recordID: number){\n    console.log(this.employmentList.filter(x=> x.id == recordID)[0].companyName);\n    \n    this.newEmployer.id = this.employmentList.filter(x=> x.id == recordID)[0].id;\n    this.newEmployer.orgId= this.employmentList.filter(x=> x.id == recordID)[0].orgId;\n    this.newEmployer.companyName= this.employmentList.filter(x=> x.id == recordID)[0].companyName;\n    this.newEmployer.companyAkaName= this.employmentList.filter(x=> x.id == recordID)[0].companyAkaName;\n    this.newEmployer.cityName= this.employmentList.filter(x=> x.id == recordID)[0].cityName;\n    this.newEmployer.stateName= this.employmentList.filter(x=> x.id == recordID)[0].stateName;\n    this.newEmployer.countryName= this.employmentList.filter(x=> x.id == recordID)[0].countryName;\n    this.newEmployer.status= this.employmentList.filter(x=> x.id == recordID)[0].status;\n    this.newEmployer.createdDateTime= this.employmentList.filter(x=> x.id == recordID)[0].createdDateTime;\n    //this.isActiveSelected = (this.employmentList.filter(x=> x.id == recordID)[0].status == \"A\");\n    console.log('isActiveSelected>>>',this.isActiveSelected);\n    this.action ='Update';\n  }\n  openCreateNewRecord(){\n    console.log('openCreateNewRecord');\n    this.action ='Create';\n    this.newEmployer = createNewEmployer();\n  }\n  isDeactiveSelected(){\n    if(this.newEmployer.status != \"A\"){\n      return true;\n    }\n    return false;\n  }\n  isActiveSelected(){\n    if(this.newEmployer.status == \"A\"){\n      console.log('isACT');\n      return true;\n    }\n    return false;\n  }\n\n  checkCitySelected(optionVal: string){\n    console.log(optionVal);\n    return \"selected\";\n  }\n  getCities(){\n    return ['Bengaluru','Kota','Delhi','Noida'];\n  }\n  getStates(){\n    return ['Rajasthan','Karnataka','Delhi','Uttar Pradesh'];\n  }\n  getCountries(){\n    return ['India','USA','Canada','Brazil'];\n  }\n  \n  updateCompName(newValue : string){\n    console.log(newValue);\n    this.newEmployer.companyName = newValue;\n    console.log(this.newEmployer.companyName);\n  }\n  updateCompAkaName(newValue : string){\n    console.log(newValue);\n    this.newEmployer.companyAkaName = newValue;\n    console.log(this.newEmployer.companyAkaName);\n  }\n  updateStatus(){\n    if(this.newEmployer.status == \"A\"){\n      this.newEmployer.status  =\"I\";\n      \n    }else{\n      this.newEmployer.status  =\"A\";\n    }\n  }\n\n  updateCity(city: string){\n    console.log('UpdateCity',city);\n    this.newEmployer.cityName = city;\n  }\n\n  updateRecord(){\n    console.log('called 111');\n    if(this.newEmployer.companyName.length ==0 ){\n      alert('Please fill the Company Name');\n      return;\n    }\n\n    if(this.action==\"Update\"){\n      this.employmentList = this.employmentList.map(x=> this.replaceRecod(x));\n      alert('Record has been updated.');\n    }else{\n      console.log(' new record created');\n      this.newEmployer.id= this.employmentList.length+1;\n      this.employmentList.push(this.newEmployer);\n      \n      this.dataSource = new MatTableDataSource(this.employmentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      console.log(this.employmentList.length);\n      this.newEmployer= createNewEmployer();\n      alert('New record has been created.');\n    }\n    \n  }\n  replaceRecod(employer : Employer){\n    if(employer.id == this.newEmployer.id){\n      employer.companyName = this.newEmployer.companyName;\n      employer.companyAkaName = this.newEmployer.companyAkaName;\n      employer.cityName = this.newEmployer.cityName;\n      employer.stateName = this.newEmployer.stateName;\n      employer.countryName = this.newEmployer.countryName;\n      employer.status = this.newEmployer.status;\n    }\n      \n    return employer;\n  }\n \n\n newEmployer = createNewEmployer();\n\n  employmentListFromAPI = [{\n    \"id\": 1,\n    \"orgId\": 2752179,\n    \"companyName\": \"Ridz Software Solutions Bengaluru B K Nagar\",\n    \"companyAkaName\": \"Ridz Software Solutions Bengaluru B K Nagar\",\n    \"cityName\": \"Kota\",\n    \"stateName\": \"Rajasthan\",\n    \"countryName\": \"India\",\n    \"status\": \"I\",\n    \"createdDateTime\": \"2020-11-29T20:41:41.127+00:00\"\n},\n{\n    \"id\": 2,\n    \"orgId\": 2752179,\n    \"companyName\": \"Global Info Systems Bengaluru B B Road\",\n    \"companyAkaName\": \"Global Info Systems Bengaluru B B Road\",\n    \"cityName\": \"Delhi\",\n    \"stateName\": \"Delhi\",\n    \"countryName\": \"India\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:53:36.987+00:00\"\n},\n{\n    \"id\": 3,\n    \"orgId\": 2752179,\n    \"companyName\": \"Saffron e-Services Noida Sector 16\",\n    \"companyAkaName\": \"Saffron e-Services Noida Sector 16\",\n    \"cityName\": \"Noida\",\n    \"stateName\": \"Uttar Pradesh\",\n    \"countryName\": \"India\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:55:07.436+00:00\"\n},\n{\n    \"id\": 4,\n    \"orgId\": 2752226,\n    \"companyName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n    \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n    \"cityName\": \"Bengaluru\",\n    \"stateName\": \"Karnataka\",\n    \"countryName\": \"India\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 5,\n  \"orgId\": 2752205,\n  \"companyName\": \"Jone D Mello Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 6,\n  \"orgId\": 2752206,\n  \"companyName\": \"Dot net Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 7,\n  \"orgId\": 2752207,\n  \"companyName\": \"JAVA Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 8,\n  \"orgId\": 2752208,\n  \"companyName\": \"Gaama Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 9,\n  \"orgId\": 2752209,\n  \"companyName\": \"Beta Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 10,\n  \"orgId\": 2752210,\n  \"companyName\": \"Alfa Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 11,\n  \"orgId\": 2752211,\n  \"companyName\": \"Rose marry Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Sapnitel Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n},{\n  \"id\": 12,\n  \"orgId\": 2752212,\n  \"companyName\": \"Apple corp Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"companyAkaName\": \"Apple corp Information Technologies Private Limited Bengaluru Btm 2Nd Stage\",\n  \"cityName\": \"Bengaluru\",\n  \"stateName\": \"Karnataka\",\n  \"countryName\": \"India\",\n  \"status\": \"A\",\n  \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n}];\n\nlistsize =4;\nnumOfPage= 2;\nemploymentList = this.employmentListFromAPI;\n\n\n}\n\nfunction createNewEmployer(): Employer {\n \n  return {\n    \"id\": -1,\n    \"orgId\": 2752212,\n    \"companyName\": \"\",\n    \"companyAkaName\": \"\",\n    \"cityName\": \"\",\n    \"stateName\": \"\",\n    \"countryName\": \"\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n  };\n}\n","  \n    <!-- create new record Element-->\n    <div class=\"heading-style\">Employment Suspect List</div>\n    \n\n    <div  style=\"float: left;width: 55%;height:100%;\">\n    \n                <div  > <!--will add scroll bar-->\n                  <table mat-table [dataSource]=\"dataSource\"  >\n                \n                    <!-- ID Column -->\n                    <ng-container matColumnDef=\"id\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> ID </th>\n                      <td mat-cell *matCellDef=\"let row\"> {{row.id}} </td>\n                    </ng-container>\n                \n                    <!-- Progress Column -->\n                    <ng-container matColumnDef=\"orgId\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> Org Id </th>\n                      <td mat-cell *matCellDef=\"let row\"> {{row.orgId}}% </td>\n                    </ng-container>\n                \n                    <!-- Name Column -->\n                    <ng-container matColumnDef=\"companyName\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header>\n                        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Type Employer Name\" #input style=\"width:140px;\"/>\n                        <i class=\"material-icons right\">search</i>\n                      </th>\n                      <td mat-cell *matCellDef=\"let row\"> {{row.companyName}} \n                      </td>\n                    </ng-container>\n                \n                    <!-- Color Column -->\n                    <ng-container matColumnDef=\"companyAKAName\">\n                      <th mat-header-cell *matHeaderCellDef mat-sort-header> \n                        <button mat-raised-button color=\"primary\" (click)=\"openCreateNewRecord()\">+ Add New Record</button>  \n                      </th>\n                      <td class=\"edit-btn\" mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\">\n                        <button (click)=\"editRecord(row.id)\">\n                          <i class=\"material-icons right\">edit</i>\n                        </button> \n                         \n                      </td>\n                    </ng-container>\n                \n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n                \n                    <!-- Row shown when there is no matching data. -->\n                    <tr class=\"mat-row\" *matNoDataRow>\n                      <td class=\"mat-cell\" colspan=\"4\">No matching  data found. </td>\n                    </tr>\n                  </table>\n                </div>\n                  <mat-paginator [pageSizeOptions]=\"[ 5, 10, 20]\"></mat-paginator>\n                \n              </div>\n    <div style=\"float: left;width: 40%;height:90%;\">\n            <mat-card class=\"card-style\">\n              <h3>{{newEmployer.companyName}} </h3>\n              \n                <table>\n                  <tr>\n                    <td>\n                      Company Name\n                    </td>\n                    <td>\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>Company Name</mat-label>\n                        <input matInput placeholder=\"Employer Name\" value={{newEmployer.companyName}} (keyup)=\"updateCompName(compName.value)\" #compName> \n                      </mat-form-field>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Company AKA Name\n                    </td>\n                    <td>\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>Company AKA Name</mat-label>\n                        <input matInput placeholder=\"Enter Company AKA Name\" value={{newEmployer.companyAkaName}} (keyup)=\"updateCompAkaName(compAkaName.value)\" #compAkaName> \n                      </mat-form-field>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      City\n                    </td>\n                    <td>\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>City</mat-label>\n                        <mat-select [(value)]=\"newEmployer.cityName\"  #selectCity>\n                          <mat-option *ngFor=\"let city of getCities()\" [value]=\"city\"(click)=\"updateCity(city)\" >\n                            {{city}}\n                          </mat-option>\n                        </mat-select>\n                        </mat-form-field>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      State\n                    </td>\n                    <td>\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>State</mat-label>\n                        <mat-select [(value)]=\"newEmployer.stateName\">\n                          <mat-option *ngFor=\"let state of getStates()\" [value]=\"state\" >\n                            {{state}}\n                          </mat-option>\n                        </mat-select>\n                      </mat-form-field>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      Country\n                    </td>\n                    <td>\n                      <mat-form-field class=\"example-full-width\">\n                        <mat-label>Country</mat-label>\n                        <mat-select [(value)]=\"newEmployer.countryName\">\n                          <mat-option *ngFor=\"let country of getCountries()\" [value]=\"country\">\n                            {{country}}\n                          </mat-option>\n                        </mat-select>\n                        </mat-form-field>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td col-span=2>\n                      <div *ngIf=\"isActiveSelected(); else DeactiveSelected\">\n                       \n                        <section class=\"example-section\">\n\n                          <mat-checkbox class=\"example-margin\" disabled=\"disabled\" [checked]=true >Active</mat-checkbox>\n                          <mat-checkbox class=\"example-margin\" (click)=\"updateStatus()\">Inactive</mat-checkbox>\n                        </section>\n                      </div>\n                      <ng-template #DeactiveSelected>\n                        <section class=\"example-section\">\n                          <mat-checkbox class=\"example-margin\" (click)=\"updateStatus()\" >Active</mat-checkbox>\n                          <mat-checkbox class=\"example-margin\" disabled=\"disabled\" [checked]=true >Inactive</mat-checkbox>\n                        </section>\n                      </ng-template>\n                       \n                      \n                    </td>\n                    \n                  </tr>\n                  <tr>\n                    <td>\n                      \n                    </td>\n                    <td class=\"create-btn\">\n                        <button mat-raised-button  color=\"primary\" (click)=\"updateRecord()\">{{action}}</button>  \n                    </td>\n                    \n                  </tr>\n\n\n                </table>\n                \n              \n                \n            </mat-card>\n    \n  </div>\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'CSPiExpress';\n}\n","<div style=\"width:100%\">\n    <div role=\"header\" style=\"min-height:5rem;width:100%\">\n      \n      <div style=\"width: 100%;float: left;\" >\n        \n        <img src=\"../assets/logo2.png\" style=\"width: 100%\">\n      </div>\n      <div style=\"width:100%\">\n        <div style=\"min-height:3rem;background-color:dimgray;width: 100%;height:50%!important\"></div>\n        <div style=\"min-height:2rem;background-color:darkgray;width: 100%;height:50%!important\"></div>\n        \n      </div>\n    </div>\n    <div role=\"main\" style=\"min-height:600px!important;background-color:platinum;\">\n      <div>&nbsp;</div>\n      <mat-drawer-container class=\"main-body-container\" style=\"background-color:platinum;!important\">\n        <mat-drawer mode=\"side\" opened >\n\n          <app-side-menu></app-side-menu>  \n        </mat-drawer>\n        <mat-drawer-content >\n          <router-outlet></router-outlet>\n        </mat-drawer-content>\n      </mat-drawer-container>\n      \n      \n    </div>\n    <div role=\"Footer\" style=\"height:5px!important;\">\n      \n    </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule, routingComponents } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EmployementListComponent } from './employement-list/employement-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport { SideMenuComponent } from './side-menu/side-menu.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EmployementListComponent,\n    routingComponents,\n    SideMenuComponent\n    \n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatCardModule,\n    MatDividerModule,\n    MatListModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatGridListModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatButtonModule,\n    MatIconModule,\n    MatExpansionModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {AfterViewInit, Component, ViewChild} from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatSort} from '@angular/material/sort';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface UserData {\n  id: string;\n  name: string;\n  progress: string;\n  color: string;\n}\nexport interface University{\n  id: number,\n  orgId: number,\n  universityName: string,\n  universityAkaName: string,\n  status: string,\n  createdDateTime: string\n}\n\n/** Constants used to fill up our data base. */\nconst COLORS: string[] = [\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\n  'aqua', 'blue', 'navy', 'black', 'gray'\n];\nconst NAMES: string[] = [\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\n];\n\n@Component({\n  selector: 'app-university-list',\n  templateUrl: './university-list.component.html',\n  styleUrls: ['./university-list.component.css']\n})\nexport class UniversityListComponent implements AfterViewInit {\n  displayedColumns: string[] = [ 'universityName','universityAKAName'];\n  dataSource: MatTableDataSource<University>;\n\n  @ViewChild(MatPaginator)\n  paginator!: MatPaginator;\n  @ViewChild(MatSort)\n  sort!: MatSort;\n  \n  checked =\"checked\";\n  action ='Create';\n  createEmplyment(){\n    alert('Sure Sir i will');\n  }\n  \n  getfilterList(keyToSearch: string){\n    console.log(keyToSearch);\n    this.employmentList = this.employmentListFromAPI.filter(xx => xx.universityName.toLowerCase().includes(keyToSearch.toLowerCase()));\n  }\n  constructor() {\n    // Load employment record\n    const employmentList = this.employmentListFromAPI;\n\n    // Assign the data to the data source for the table to render\n    this.dataSource = new MatTableDataSource(employmentList);\n   \n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    console.log('Filteeeeeeeerrrrr');\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  //isActiveSelected =false;\n  editRecord(recordID: number){\n    console.log(this.employmentList.filter(x=> x.id == recordID)[0].universityName);\n    \n    this.newUniversity.id = this.employmentList.filter(x=> x.id == recordID)[0].id;\n    this.newUniversity.orgId= this.employmentList.filter(x=> x.id == recordID)[0].orgId;\n    this.newUniversity.universityName= this.employmentList.filter(x=> x.id == recordID)[0].universityName;\n    this.newUniversity.universityAkaName= this.employmentList.filter(x=> x.id == recordID)[0].universityAkaName;\n    this.newUniversity.status= this.employmentList.filter(x=> x.id == recordID)[0].status;\n    this.newUniversity.createdDateTime= this.employmentList.filter(x=> x.id == recordID)[0].createdDateTime;\n    //this.isActiveSelected = (this.employmentList.filter(x=> x.id == recordID)[0].status == \"A\");\n    console.log('isActiveSelected>>>',this.isActiveSelected);\n    this.action ='Update';\n  }\n  openCreateNewRecord(){\n    console.log('openCreateNewRecord');\n    this.action ='Create';\n    this.newUniversity = createnewUniversity();\n  }\n  isDeactiveSelected(){\n    if(this.newUniversity.status != \"A\"){\n      return true;\n    }\n    return false;\n  }\n  isActiveSelected(){\n    if(this.newUniversity.status == \"A\"){\n      console.log('isACT');\n      return true;\n    }\n    return false;\n  }\n\n  checkCitySelected(optionVal: string){\n    console.log(optionVal);\n    return \"selected\";\n  }\n \n  \n  updateCompName(newValue : string){\n    console.log(newValue);\n    this.newUniversity.universityName = newValue;\n    console.log(this.newUniversity.universityName);\n  }\n\n  updateCompAkaName(newValue : string){\n    console.log(newValue);\n    this.newUniversity.universityAkaName = newValue;\n    console.log(this.newUniversity.universityAkaName);\n  }\n  \n  updateStatus(){\n    if(this.newUniversity.status == \"A\"){\n      this.newUniversity.status  =\"I\";\n      \n    }else{\n      this.newUniversity.status  =\"A\";\n    }\n  }\n  \n\n  updateRecord(){\n    console.log('called 111');\n    if(this.newUniversity.universityName.length ==0 ){\n      alert('Please fill the University Name');\n      return;\n    }\n\n    if(this.action==\"Update\"){\n      this.employmentList = this.employmentList.map(x=> this.replaceRecod(x));\n      alert('Record has been updated.');\n    }else{\n      console.log(' new record created');\n      this.newUniversity.id= this.employmentList.length+1;\n      this.employmentList.push(this.newUniversity);\n      \n      this.dataSource = new MatTableDataSource(this.employmentList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      console.log(this.employmentList.length);\n      this.newUniversity= createnewUniversity();\n      alert('New record has been created.');\n    }\n    \n  }\n  replaceRecod(university : University){\n    if(university.id == this.newUniversity.id){\n      university.universityName = this.newUniversity.universityName;\n      university.universityAkaName = this.newUniversity.universityAkaName;\n      university.status = this.newUniversity.status;\n    }\n      \n    return university;\n  }\n \n\n newUniversity = createnewUniversity();\n\n  employmentListFromAPI = [\n    {\n        \"id\": 1,\n        \"orgId\": 2514320,\n        \"universityName\": \"Mamidi College-Suspect\",\n        \"universityAkaName\": \"Mamidi College -\",\n        \"status\": \"A\",\n        \"createdDateTime\": \"2020-11-29T20:43:34.022+00:00\"\n    },\n    {\n        \"id\": 2,\n        \"orgId\": 2514341,\n        \"universityName\": \"Global Institute of Management and Research-Suspect\",\n        \"universityAkaName\": \"Global Institute Of Management And Research -\",\n        \"status\": \"A\",\n        \"createdDateTime\": \"2020-12-16T18:58:52.742+00:00\"\n    },\n    {\n        \"id\": 3,\n        \"orgId\": 2514362,\n        \"universityName\": \"Global Institute Of Education & Research-Suspect\",\n        \"universityAkaName\": \"Global Institute Of Education & Research -\",\n        \"status\": \"A\",\n        \"createdDateTime\": \"2020-12-16T18:59:59.456+00:00\"\n    },\n    {\n        \"id\": 4,\n        \"orgId\": 2514406,\n        \"universityName\": \"Global Institute Of Journalism & Mass. Media Communication-Suspect\",\n        \"universityAkaName\": \"Global Institute Of Journalism & Mass Media Communication -\",\n        \"status\": \"A\",\n        \"createdDateTime\": \"2020-12-16T19:00:36.603+00:00\"\n    },{\n      \"id\": 5,\n      \"orgId\": 2514320,\n      \"universityName\": \"Mamidi1 College-Suspect\",\n      \"universityAkaName\": \"Mamidi College -\",\n      \"status\": \"A\",\n      \"createdDateTime\": \"2020-11-29T20:43:34.022+00:00\"\n  },\n  {\n      \"id\": 6,\n      \"orgId\": 2514341,\n      \"universityName\": \"Global1 Institute of Management and Research-Suspect\",\n      \"universityAkaName\": \"Global Institute Of Management And Research -\",\n      \"status\": \"A\",\n      \"createdDateTime\": \"2020-12-16T18:58:52.742+00:00\"\n  },\n  {\n      \"id\": 7,\n      \"orgId\": 2514362,\n      \"universityName\": \"Global1 Institute Of Education & Research-Suspect\",\n      \"universityAkaName\": \"Global Institute Of Education & Research -\",\n      \"status\": \"A\",\n      \"createdDateTime\": \"2020-12-16T18:59:59.456+00:00\"\n  },\n  {\n      \"id\": 8,\n      \"orgId\": 2514406,\n      \"universityName\": \"Global1 Institute Of Journalism & Mass. Media Communication-Suspect\",\n      \"universityAkaName\": \"Global Institute Of Journalism & Mass Media Communication -\",\n      \"status\": \"A\",\n      \"createdDateTime\": \"2020-12-16T19:00:36.603+00:00\"\n  },{\n    \"id\": 9,\n    \"orgId\": 2514320,\n    \"universityName\": \"Mamidi2 College-Suspect\",\n    \"universityAkaName\": \"Mamidi College -\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-11-29T20:43:34.022+00:00\"\n},\n{\n    \"id\": 10,\n    \"orgId\": 2514341,\n    \"universityName\": \"Global2 Institute of Management and Research-Suspect\",\n    \"universityAkaName\": \"Global Institute Of Management And Research -\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:58:52.742+00:00\"\n},\n{\n    \"id\": 11,\n    \"orgId\": 2514362,\n    \"universityName\": \"Global2 Institute Of Education & Research-Suspect\",\n    \"universityAkaName\": \"Global Institute Of Education & Research -\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:59:59.456+00:00\"\n},\n{\n    \"id\": 12,\n    \"orgId\": 2514406,\n    \"universityName\": \"Global2 Institute Of Journalism & Mass. Media Communication-Suspect\",\n    \"universityAkaName\": \"Global Institute Of Journalism & Mass Media Communication -\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T19:00:36.603+00:00\"\n}\n];\n\n\nemploymentList = this.employmentListFromAPI;\n\n\n}\n\nfunction createnewUniversity(): University {\n \n  return {\n    \"id\": -1,\n    \"orgId\": 2752212,\n    \"universityName\": \"\",\n    \"universityAkaName\": \"\",\n    \"status\": \"A\",\n    \"createdDateTime\": \"2020-12-16T18:56:27.240+00:00\"\n  };\n}\n","<div class=\"heading-style\">University Suspect List</div>\n\n<div  style=\"float: left;width: 55%;height:100%;\">\n\n  <div  > <!--will add scroll bar-->\n    <table mat-table [dataSource]=\"dataSource\" >\n      <!-- Name Column -->\n        <ng-container matColumnDef=\"universityName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\n            <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Type University Name\" #input style=\"width:140px;\">\n            <span class=\"material-icons right\">search</span>\n          </th>\n          <td mat-cell *matCellDef=\"let row\"> {{row.universityName}} \n            </td>\n        </ng-container>\n    \n        <!-- Color Column -->\n        <ng-container matColumnDef=\"universityAKAName\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> \n            <button mat-raised-button color=\"primary\" (click)=\"openCreateNewRecord()\">+ Add New Record</button>  \n          </th>\n          <td class=\"edit-btn\" mat-cell *matCellDef=\"let row\" [style.color]=\"row.color\">\n            <button (click)=\"editRecord(row.id)\">\n              <i class=\"material-icons right\">edit</i>\n            </button> \n             \n          </td>\n        </ng-container>\n    \n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    \n        <!-- Row shown when there is no matching data. -->\n        <tr class=\"mat-row\" *matNoDataRow>\n          <td class=\"mat-cell\" colspan=\"4\">No matching data found.</td>\n        </tr>\n      </table>\n  </div>\n    <mat-paginator [pageSizeOptions]=\"[ 5, 10, 20]\"></mat-paginator>              \n        </div>\n\n<div style=\"float: left;width: 40%;height:90%;\">\n    \n  <mat-card class=\"card-style\"  >\n      <h3>{{newUniversity.universityName}} </h3>\n\n      \n        <table>\n          <tr>\n            <td>\n              University Name\n            </td>\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <mat-label>University Name</mat-label>\n                <input matInput placeholder=\"Employer Name\" value={{newUniversity.universityName}} (keyup)=\"updateCompName(compName.value)\" #compName> \n              </mat-form-field>\n            </td>\n          </tr>\n          <tr>\n            <td>\n              University AKA Name\n            </td>\n            <td>\n              <mat-form-field class=\"example-full-width\">\n                <mat-label>University AKA Name</mat-label>\n                <input matInput placeholder=\"Employer Name\" value={{newUniversity.universityAkaName}} (keyup)=\"updateCompAkaName(compAkaName.value)\" #compAkaName> \n              </mat-form-field>\n            </td>\n          </tr>\n          <tr>\n            <td col-span=2>\n              <div *ngIf=\"isActiveSelected(); else DeactiveSelected\">\n              \n                <section class=\"example-section\">\n\n                  <mat-checkbox class=\"example-margin\" disabled=\"disabled\" [checked]=true >Active</mat-checkbox>\n                  <mat-checkbox class=\"example-margin\" (click)=\"updateStatus()\">Inactive</mat-checkbox>\n                </section>\n              </div>\n              <ng-template #DeactiveSelected>\n                <section class=\"example-section\">\n                  <mat-checkbox class=\"example-margin\" (click)=\"updateStatus()\" >Active</mat-checkbox>\n                  <mat-checkbox class=\"example-margin\" disabled=\"disabled\" [checked]=true >Inactive</mat-checkbox>\n                </section>\n              </ng-template>\n              \n              \n            </td>\n            \n          </tr>\n          <tr>\n            <td>\n              \n            </td>\n            <td class=\"create-btn\">\n                <button mat-raised-button  color=\"primary\" (click)=\"updateRecord()\">{{action}}</button>  \n            </td>\n          </tr>\n\n\n\n        </table>\n  </mat-card> \n      \n</div>\n    \n\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>page-not-found works!</p>\n<img src=\"../assets/logo.png\" style=\"width: 170px;height:500px\">\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {EmployementListComponent} from './employement-list/employement-list.component';\nimport {UniversityListComponent} from './university-list/university-list.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {path :'employments',component : EmployementListComponent},\n  {path :'universities',component : UniversityListComponent},\n  {path :'**',component :PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\nexport const routingComponents =[EmployementListComponent,UniversityListComponent,PageNotFoundComponent];\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}